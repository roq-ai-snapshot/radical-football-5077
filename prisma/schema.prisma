generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  event      event[]
  team       team[]
}

model coach {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String          @db.Uuid
  team_id       String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  team          team            @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  training_plan training_plan[]
}

model event {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?
  event_date  DateTime @db.Date
  location    String?  @db.VarChar(255)
  academy_id  String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  academy     academy  @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model exercise {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String        @db.VarChar(255)
  description      String?
  training_plan_id String        @db.Uuid
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  training_plan    training_plan @relation(fields: [training_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id              String                 @db.Uuid
  team_id              String                 @db.Uuid
  position             String?                @db.VarChar(50)
  birth_date           DateTime?              @db.Date
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  team                 team                   @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                 user                   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  player_performance   player_performance[]
  player_training_plan player_training_plan[]
}

model player_performance {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id      String   @db.Uuid
  game_date      DateTime @db.Date
  goals          Int?
  assists        Int?
  minutes_played Int?
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  player         player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player_training_plan {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id        String        @db.Uuid
  training_plan_id String        @db.Uuid
  start_date       DateTime      @db.Date
  end_date         DateTime      @db.Date
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  player           player        @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  training_plan    training_plan @relation(fields: [training_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  academy_id String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  coach      coach[]
  player     player[]
  academy    academy  @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model training_plan {
  id                   String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                 String                 @db.VarChar(255)
  description          String?
  coach_id             String                 @db.Uuid
  created_at           DateTime               @default(now()) @db.Timestamp(6)
  updated_at           DateTime               @default(now()) @db.Timestamp(6)
  exercise             exercise[]
  player_training_plan player_training_plan[]
  coach                coach                  @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  academy     academy[]
  coach       coach[]
  player      player[]
}
